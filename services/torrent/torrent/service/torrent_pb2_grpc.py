# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

from torrent.service import torrent_pb2 as torrent_dot_service_dot_torrent__pb2


class TorrentStub(object):
  """The torrent's service definition.
  """

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.Ping = channel.unary_unary(
        '/torrent.Torrent/Ping',
        request_serializer=torrent_dot_service_dot_torrent__pb2.PingRequest.SerializeToString,
        response_deserializer=torrent_dot_service_dot_torrent__pb2.PingReply.FromString,
        )
    self.Shutdown = channel.unary_unary(
        '/torrent.Torrent/Shutdown',
        request_serializer=torrent_dot_service_dot_torrent__pb2.ShutdownRequest.SerializeToString,
        response_deserializer=torrent_dot_service_dot_torrent__pb2.ShutdownReply.FromString,
        )
    self.AddMagnetUri = channel.unary_unary(
        '/torrent.Torrent/AddMagnetUri',
        request_serializer=torrent_dot_service_dot_torrent__pb2.AddMagnetUriRequest.SerializeToString,
        response_deserializer=torrent_dot_service_dot_torrent__pb2.AddMagnetUriReply.FromString,
        )
    self.RemoveTorrent = channel.unary_unary(
        '/torrent.Torrent/RemoveTorrent',
        request_serializer=torrent_dot_service_dot_torrent__pb2.RemoveTorrentRequest.SerializeToString,
        response_deserializer=torrent_dot_service_dot_torrent__pb2.RemoveTorrentReply.FromString,
        )
    self.PauseTorrent = channel.unary_unary(
        '/torrent.Torrent/PauseTorrent',
        request_serializer=torrent_dot_service_dot_torrent__pb2.PauseTorrentRequest.SerializeToString,
        response_deserializer=torrent_dot_service_dot_torrent__pb2.PauseTorrentReply.FromString,
        )
    self.ResumeTorrent = channel.unary_unary(
        '/torrent.Torrent/ResumeTorrent',
        request_serializer=torrent_dot_service_dot_torrent__pb2.ResumeTorrentRequest.SerializeToString,
        response_deserializer=torrent_dot_service_dot_torrent__pb2.ResumeTorrentReply.FromString,
        )
    self.AllTorrentStatus = channel.unary_stream(
        '/torrent.Torrent/AllTorrentStatus',
        request_serializer=torrent_dot_service_dot_torrent__pb2.AllTorrentStatusRequest.SerializeToString,
        response_deserializer=torrent_dot_service_dot_torrent__pb2.AllTorrentStatusReply.FromString,
        )


class TorrentServicer(object):
  """The torrent's service definition.
  """

  def Ping(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def Shutdown(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def AddMagnetUri(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def RemoveTorrent(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def PauseTorrent(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def ResumeTorrent(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def AllTorrentStatus(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_TorrentServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'Ping': grpc.unary_unary_rpc_method_handler(
          servicer.Ping,
          request_deserializer=torrent_dot_service_dot_torrent__pb2.PingRequest.FromString,
          response_serializer=torrent_dot_service_dot_torrent__pb2.PingReply.SerializeToString,
      ),
      'Shutdown': grpc.unary_unary_rpc_method_handler(
          servicer.Shutdown,
          request_deserializer=torrent_dot_service_dot_torrent__pb2.ShutdownRequest.FromString,
          response_serializer=torrent_dot_service_dot_torrent__pb2.ShutdownReply.SerializeToString,
      ),
      'AddMagnetUri': grpc.unary_unary_rpc_method_handler(
          servicer.AddMagnetUri,
          request_deserializer=torrent_dot_service_dot_torrent__pb2.AddMagnetUriRequest.FromString,
          response_serializer=torrent_dot_service_dot_torrent__pb2.AddMagnetUriReply.SerializeToString,
      ),
      'RemoveTorrent': grpc.unary_unary_rpc_method_handler(
          servicer.RemoveTorrent,
          request_deserializer=torrent_dot_service_dot_torrent__pb2.RemoveTorrentRequest.FromString,
          response_serializer=torrent_dot_service_dot_torrent__pb2.RemoveTorrentReply.SerializeToString,
      ),
      'PauseTorrent': grpc.unary_unary_rpc_method_handler(
          servicer.PauseTorrent,
          request_deserializer=torrent_dot_service_dot_torrent__pb2.PauseTorrentRequest.FromString,
          response_serializer=torrent_dot_service_dot_torrent__pb2.PauseTorrentReply.SerializeToString,
      ),
      'ResumeTorrent': grpc.unary_unary_rpc_method_handler(
          servicer.ResumeTorrent,
          request_deserializer=torrent_dot_service_dot_torrent__pb2.ResumeTorrentRequest.FromString,
          response_serializer=torrent_dot_service_dot_torrent__pb2.ResumeTorrentReply.SerializeToString,
      ),
      'AllTorrentStatus': grpc.unary_stream_rpc_method_handler(
          servicer.AllTorrentStatus,
          request_deserializer=torrent_dot_service_dot_torrent__pb2.AllTorrentStatusRequest.FromString,
          response_serializer=torrent_dot_service_dot_torrent__pb2.AllTorrentStatusReply.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'torrent.Torrent', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
