syntax = "proto3";

package torrent;

// The torrent's service definition.
service Torrent {
    rpc Ping (PingRequest) returns (PingReply);
    rpc Shutdown(ShutdownRequest) returns (ShutdownReply);
    rpc AddMagnetUri(AddMagnetUriRequest) returns (AddMagnetUriReply);
    rpc RemoveTorrent(RemoveTorrentRequest) returns (RemoveTorrentReply);
    rpc PauseTorrent(PauseTorrentRequest) returns (PauseTorrentReply);
    rpc ResumeTorrent(ResumeTorrentRequest) returns (ResumeTorrentReply);
    rpc AllTorrentStatus(AllTorrentStatusRequest) returns (stream AllTorrentStatusReply);
}

// The ping message containing the user's name.
message PingRequest {
    string message = 1;
}

// The response message containing the greetings
message PingReply {
    string message = 1;
}

message ShutdownRequest {
    string message = 1;
}

message ShutdownReply {
    string message = 1;
}

message AddMagnetUriRequest {
    string magnet = 1;
}

message AddMagnetUriReply {
    string hash = 1;
}

message RemoveTorrentRequest {
    string hash = 1;
}

message RemoveTorrentReply {
}

message PauseTorrentRequest {
    string hash = 1;
}

message PauseTorrentReply {
}

message ResumeTorrentRequest {
    string hash = 1;
}

message ResumeTorrentReply {
}

message TorrentStatus {
    string hash = 1;
    string name = 2;
    float progress = 3;
    sint32 download_rate = 4;
    sint32 upload_rate = 5;
    sint32 peers = 6;
    sint32 seeds = 7;
    string state = 8;
    uint64 total_size = 9;
}

message AllTorrentStatusRequest {
}

message AllTorrentStatusReply {
    repeated TorrentStatus all_torrent_status = 1;
}