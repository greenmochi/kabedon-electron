// Code generated by protoc-gen-go. DO NOT EDIT.
// source: myanimelist.proto

package message

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Username struct {
	Username             string   `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Username) Reset()         { *m = Username{} }
func (m *Username) String() string { return proto.CompactTextString(m) }
func (*Username) ProtoMessage()    {}
func (*Username) Descriptor() ([]byte, []int) {
	return fileDescriptor_7365bf8e2ee52b0c, []int{0}
}

func (m *Username) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Username.Unmarshal(m, b)
}
func (m *Username) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Username.Marshal(b, m, deterministic)
}
func (m *Username) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Username.Merge(m, src)
}
func (m *Username) XXX_Size() int {
	return xxx_messageInfo_Username.Size(m)
}
func (m *Username) XXX_DiscardUnknown() {
	xxx_messageInfo_Username.DiscardUnknown(m)
}

var xxx_messageInfo_Username proto.InternalMessageInfo

func (m *Username) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

type UserAnimeList struct {
	Username             string                     `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	UserAnime            []*UserAnimeList_UserAnime `protobuf:"bytes,2,rep,name=user_anime,json=userAnime,proto3" json:"user_anime,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                   `json:"-"`
	XXX_unrecognized     []byte                     `json:"-"`
	XXX_sizecache        int32                      `json:"-"`
}

func (m *UserAnimeList) Reset()         { *m = UserAnimeList{} }
func (m *UserAnimeList) String() string { return proto.CompactTextString(m) }
func (*UserAnimeList) ProtoMessage()    {}
func (*UserAnimeList) Descriptor() ([]byte, []int) {
	return fileDescriptor_7365bf8e2ee52b0c, []int{1}
}

func (m *UserAnimeList) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserAnimeList.Unmarshal(m, b)
}
func (m *UserAnimeList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserAnimeList.Marshal(b, m, deterministic)
}
func (m *UserAnimeList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserAnimeList.Merge(m, src)
}
func (m *UserAnimeList) XXX_Size() int {
	return xxx_messageInfo_UserAnimeList.Size(m)
}
func (m *UserAnimeList) XXX_DiscardUnknown() {
	xxx_messageInfo_UserAnimeList.DiscardUnknown(m)
}

var xxx_messageInfo_UserAnimeList proto.InternalMessageInfo

func (m *UserAnimeList) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *UserAnimeList) GetUserAnime() []*UserAnimeList_UserAnime {
	if m != nil {
		return m.UserAnime
	}
	return nil
}

type UserAnimeList_UserAnime struct {
	Status                int32                                `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Score                 int32                                `protobuf:"varint,2,opt,name=score,proto3" json:"score,omitempty"`
	Tags                  string                               `protobuf:"bytes,3,opt,name=tags,proto3" json:"tags,omitempty"`
	IsRewatching          string                               `protobuf:"bytes,4,opt,name=is_rewatching,json=isRewatching,proto3" json:"is_rewatching,omitempty"`
	NumWatchedEpisodes    int32                                `protobuf:"varint,5,opt,name=num_watched_episodes,json=numWatchedEpisodes,proto3" json:"num_watched_episodes,omitempty"`
	AnimeTitle            string                               `protobuf:"bytes,6,opt,name=anime_title,json=animeTitle,proto3" json:"anime_title,omitempty"`
	AnimeNumEpisodes      int32                                `protobuf:"varint,7,opt,name=anime_num_episodes,json=animeNumEpisodes,proto3" json:"anime_num_episodes,omitempty"`
	AnimeAiringStatus     int32                                `protobuf:"varint,8,opt,name=anime_airing_status,json=animeAiringStatus,proto3" json:"anime_airing_status,omitempty"`
	AnimeId               int32                                `protobuf:"varint,9,opt,name=anime_id,json=animeId,proto3" json:"anime_id,omitempty"`
	AnimeStudios          string                               `protobuf:"bytes,10,opt,name=anime_studios,json=animeStudios,proto3" json:"anime_studios,omitempty"`
	AnimeLicensors        string                               `protobuf:"bytes,11,opt,name=anime_licensors,json=animeLicensors,proto3" json:"anime_licensors,omitempty"`
	AnimeSeason           *UserAnimeList_UserAnime_AnimeSeason `protobuf:"bytes,12,opt,name=anime_season,json=animeSeason,proto3" json:"anime_season,omitempty"`
	HasEpisodeVideo       bool                                 `protobuf:"varint,13,opt,name=has_episode_video,json=hasEpisodeVideo,proto3" json:"has_episode_video,omitempty"`
	HasPromotionVideo     bool                                 `protobuf:"varint,14,opt,name=has_promotion_video,json=hasPromotionVideo,proto3" json:"has_promotion_video,omitempty"`
	HasVideo              bool                                 `protobuf:"varint,15,opt,name=has_video,json=hasVideo,proto3" json:"has_video,omitempty"`
	VideoUrl              string                               `protobuf:"bytes,16,opt,name=video_url,json=videoUrl,proto3" json:"video_url,omitempty"`
	AnimeUrl              string                               `protobuf:"bytes,17,opt,name=anime_url,json=animeUrl,proto3" json:"anime_url,omitempty"`
	AnimeImagePath        string                               `protobuf:"bytes,18,opt,name=anime_image_path,json=animeImagePath,proto3" json:"anime_image_path,omitempty"`
	IsAddedToList         bool                                 `protobuf:"varint,19,opt,name=is_added_to_list,json=isAddedToList,proto3" json:"is_added_to_list,omitempty"`
	AnimeMediaTypeString  string                               `protobuf:"bytes,20,opt,name=anime_media_type_string,json=animeMediaTypeString,proto3" json:"anime_media_type_string,omitempty"`
	AnimeMpaaRatingString string                               `protobuf:"bytes,21,opt,name=anime_mpaa_rating_string,json=animeMpaaRatingString,proto3" json:"anime_mpaa_rating_string,omitempty"`
	StartDateString       string                               `protobuf:"bytes,22,opt,name=start_date_string,json=startDateString,proto3" json:"start_date_string,omitempty"`
	FinishDateString      string                               `protobuf:"bytes,23,opt,name=finish_date_string,json=finishDateString,proto3" json:"finish_date_string,omitempty"`
	AnimeStartDateString  string                               `protobuf:"bytes,24,opt,name=anime_start_date_string,json=animeStartDateString,proto3" json:"anime_start_date_string,omitempty"`
	AnimeEndDateString    string                               `protobuf:"bytes,25,opt,name=anime_end_date_string,json=animeEndDateString,proto3" json:"anime_end_date_string,omitempty"`
	DaysString            int32                                `protobuf:"varint,26,opt,name=days_string,json=daysString,proto3" json:"days_string,omitempty"`
	StorageString         string                               `protobuf:"bytes,27,opt,name=storage_string,json=storageString,proto3" json:"storage_string,omitempty"`
	PriorityString        string                               `protobuf:"bytes,28,opt,name=priority_string,json=priorityString,proto3" json:"priority_string,omitempty"`
	XXX_NoUnkeyedLiteral  struct{}                             `json:"-"`
	XXX_unrecognized      []byte                               `json:"-"`
	XXX_sizecache         int32                                `json:"-"`
}

func (m *UserAnimeList_UserAnime) Reset()         { *m = UserAnimeList_UserAnime{} }
func (m *UserAnimeList_UserAnime) String() string { return proto.CompactTextString(m) }
func (*UserAnimeList_UserAnime) ProtoMessage()    {}
func (*UserAnimeList_UserAnime) Descriptor() ([]byte, []int) {
	return fileDescriptor_7365bf8e2ee52b0c, []int{1, 0}
}

func (m *UserAnimeList_UserAnime) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserAnimeList_UserAnime.Unmarshal(m, b)
}
func (m *UserAnimeList_UserAnime) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserAnimeList_UserAnime.Marshal(b, m, deterministic)
}
func (m *UserAnimeList_UserAnime) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserAnimeList_UserAnime.Merge(m, src)
}
func (m *UserAnimeList_UserAnime) XXX_Size() int {
	return xxx_messageInfo_UserAnimeList_UserAnime.Size(m)
}
func (m *UserAnimeList_UserAnime) XXX_DiscardUnknown() {
	xxx_messageInfo_UserAnimeList_UserAnime.DiscardUnknown(m)
}

var xxx_messageInfo_UserAnimeList_UserAnime proto.InternalMessageInfo

func (m *UserAnimeList_UserAnime) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *UserAnimeList_UserAnime) GetScore() int32 {
	if m != nil {
		return m.Score
	}
	return 0
}

func (m *UserAnimeList_UserAnime) GetTags() string {
	if m != nil {
		return m.Tags
	}
	return ""
}

func (m *UserAnimeList_UserAnime) GetIsRewatching() string {
	if m != nil {
		return m.IsRewatching
	}
	return ""
}

func (m *UserAnimeList_UserAnime) GetNumWatchedEpisodes() int32 {
	if m != nil {
		return m.NumWatchedEpisodes
	}
	return 0
}

func (m *UserAnimeList_UserAnime) GetAnimeTitle() string {
	if m != nil {
		return m.AnimeTitle
	}
	return ""
}

func (m *UserAnimeList_UserAnime) GetAnimeNumEpisodes() int32 {
	if m != nil {
		return m.AnimeNumEpisodes
	}
	return 0
}

func (m *UserAnimeList_UserAnime) GetAnimeAiringStatus() int32 {
	if m != nil {
		return m.AnimeAiringStatus
	}
	return 0
}

func (m *UserAnimeList_UserAnime) GetAnimeId() int32 {
	if m != nil {
		return m.AnimeId
	}
	return 0
}

func (m *UserAnimeList_UserAnime) GetAnimeStudios() string {
	if m != nil {
		return m.AnimeStudios
	}
	return ""
}

func (m *UserAnimeList_UserAnime) GetAnimeLicensors() string {
	if m != nil {
		return m.AnimeLicensors
	}
	return ""
}

func (m *UserAnimeList_UserAnime) GetAnimeSeason() *UserAnimeList_UserAnime_AnimeSeason {
	if m != nil {
		return m.AnimeSeason
	}
	return nil
}

func (m *UserAnimeList_UserAnime) GetHasEpisodeVideo() bool {
	if m != nil {
		return m.HasEpisodeVideo
	}
	return false
}

func (m *UserAnimeList_UserAnime) GetHasPromotionVideo() bool {
	if m != nil {
		return m.HasPromotionVideo
	}
	return false
}

func (m *UserAnimeList_UserAnime) GetHasVideo() bool {
	if m != nil {
		return m.HasVideo
	}
	return false
}

func (m *UserAnimeList_UserAnime) GetVideoUrl() string {
	if m != nil {
		return m.VideoUrl
	}
	return ""
}

func (m *UserAnimeList_UserAnime) GetAnimeUrl() string {
	if m != nil {
		return m.AnimeUrl
	}
	return ""
}

func (m *UserAnimeList_UserAnime) GetAnimeImagePath() string {
	if m != nil {
		return m.AnimeImagePath
	}
	return ""
}

func (m *UserAnimeList_UserAnime) GetIsAddedToList() bool {
	if m != nil {
		return m.IsAddedToList
	}
	return false
}

func (m *UserAnimeList_UserAnime) GetAnimeMediaTypeString() string {
	if m != nil {
		return m.AnimeMediaTypeString
	}
	return ""
}

func (m *UserAnimeList_UserAnime) GetAnimeMpaaRatingString() string {
	if m != nil {
		return m.AnimeMpaaRatingString
	}
	return ""
}

func (m *UserAnimeList_UserAnime) GetStartDateString() string {
	if m != nil {
		return m.StartDateString
	}
	return ""
}

func (m *UserAnimeList_UserAnime) GetFinishDateString() string {
	if m != nil {
		return m.FinishDateString
	}
	return ""
}

func (m *UserAnimeList_UserAnime) GetAnimeStartDateString() string {
	if m != nil {
		return m.AnimeStartDateString
	}
	return ""
}

func (m *UserAnimeList_UserAnime) GetAnimeEndDateString() string {
	if m != nil {
		return m.AnimeEndDateString
	}
	return ""
}

func (m *UserAnimeList_UserAnime) GetDaysString() int32 {
	if m != nil {
		return m.DaysString
	}
	return 0
}

func (m *UserAnimeList_UserAnime) GetStorageString() string {
	if m != nil {
		return m.StorageString
	}
	return ""
}

func (m *UserAnimeList_UserAnime) GetPriorityString() string {
	if m != nil {
		return m.PriorityString
	}
	return ""
}

type UserAnimeList_UserAnime_AnimeSeason struct {
	Year                 int32    `protobuf:"varint,1,opt,name=year,proto3" json:"year,omitempty"`
	Season               string   `protobuf:"bytes,2,opt,name=season,proto3" json:"season,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UserAnimeList_UserAnime_AnimeSeason) Reset()         { *m = UserAnimeList_UserAnime_AnimeSeason{} }
func (m *UserAnimeList_UserAnime_AnimeSeason) String() string { return proto.CompactTextString(m) }
func (*UserAnimeList_UserAnime_AnimeSeason) ProtoMessage()    {}
func (*UserAnimeList_UserAnime_AnimeSeason) Descriptor() ([]byte, []int) {
	return fileDescriptor_7365bf8e2ee52b0c, []int{1, 0, 0}
}

func (m *UserAnimeList_UserAnime_AnimeSeason) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserAnimeList_UserAnime_AnimeSeason.Unmarshal(m, b)
}
func (m *UserAnimeList_UserAnime_AnimeSeason) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserAnimeList_UserAnime_AnimeSeason.Marshal(b, m, deterministic)
}
func (m *UserAnimeList_UserAnime_AnimeSeason) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserAnimeList_UserAnime_AnimeSeason.Merge(m, src)
}
func (m *UserAnimeList_UserAnime_AnimeSeason) XXX_Size() int {
	return xxx_messageInfo_UserAnimeList_UserAnime_AnimeSeason.Size(m)
}
func (m *UserAnimeList_UserAnime_AnimeSeason) XXX_DiscardUnknown() {
	xxx_messageInfo_UserAnimeList_UserAnime_AnimeSeason.DiscardUnknown(m)
}

var xxx_messageInfo_UserAnimeList_UserAnime_AnimeSeason proto.InternalMessageInfo

func (m *UserAnimeList_UserAnime_AnimeSeason) GetYear() int32 {
	if m != nil {
		return m.Year
	}
	return 0
}

func (m *UserAnimeList_UserAnime_AnimeSeason) GetSeason() string {
	if m != nil {
		return m.Season
	}
	return ""
}

type SearchQuery struct {
	Query                string   `protobuf:"bytes,1,opt,name=query,proto3" json:"query,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SearchQuery) Reset()         { *m = SearchQuery{} }
func (m *SearchQuery) String() string { return proto.CompactTextString(m) }
func (*SearchQuery) ProtoMessage()    {}
func (*SearchQuery) Descriptor() ([]byte, []int) {
	return fileDescriptor_7365bf8e2ee52b0c, []int{2}
}

func (m *SearchQuery) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SearchQuery.Unmarshal(m, b)
}
func (m *SearchQuery) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SearchQuery.Marshal(b, m, deterministic)
}
func (m *SearchQuery) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SearchQuery.Merge(m, src)
}
func (m *SearchQuery) XXX_Size() int {
	return xxx_messageInfo_SearchQuery.Size(m)
}
func (m *SearchQuery) XXX_DiscardUnknown() {
	xxx_messageInfo_SearchQuery.DiscardUnknown(m)
}

var xxx_messageInfo_SearchQuery proto.InternalMessageInfo

func (m *SearchQuery) GetQuery() string {
	if m != nil {
		return m.Query
	}
	return ""
}

type AnimeSearchResults struct {
	Results              []*AnimeSearchResults_AnimeSearchResult `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                `json:"-"`
	XXX_unrecognized     []byte                                  `json:"-"`
	XXX_sizecache        int32                                   `json:"-"`
}

func (m *AnimeSearchResults) Reset()         { *m = AnimeSearchResults{} }
func (m *AnimeSearchResults) String() string { return proto.CompactTextString(m) }
func (*AnimeSearchResults) ProtoMessage()    {}
func (*AnimeSearchResults) Descriptor() ([]byte, []int) {
	return fileDescriptor_7365bf8e2ee52b0c, []int{3}
}

func (m *AnimeSearchResults) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AnimeSearchResults.Unmarshal(m, b)
}
func (m *AnimeSearchResults) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AnimeSearchResults.Marshal(b, m, deterministic)
}
func (m *AnimeSearchResults) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AnimeSearchResults.Merge(m, src)
}
func (m *AnimeSearchResults) XXX_Size() int {
	return xxx_messageInfo_AnimeSearchResults.Size(m)
}
func (m *AnimeSearchResults) XXX_DiscardUnknown() {
	xxx_messageInfo_AnimeSearchResults.DiscardUnknown(m)
}

var xxx_messageInfo_AnimeSearchResults proto.InternalMessageInfo

func (m *AnimeSearchResults) GetResults() []*AnimeSearchResults_AnimeSearchResult {
	if m != nil {
		return m.Results
	}
	return nil
}

type AnimeSearchResults_AnimeSearchResult struct {
	ImgSrc               string   `protobuf:"bytes,1,opt,name=img_src,json=imgSrc,proto3" json:"img_src,omitempty"`
	ImgBlob              []byte   `protobuf:"bytes,2,opt,name=img_blob,json=imgBlob,proto3" json:"img_blob,omitempty"`
	Title                string   `protobuf:"bytes,3,opt,name=title,proto3" json:"title,omitempty"`
	Link                 string   `protobuf:"bytes,4,opt,name=link,proto3" json:"link,omitempty"`
	Synopsis             string   `protobuf:"bytes,5,opt,name=synopsis,proto3" json:"synopsis,omitempty"`
	Type                 string   `protobuf:"bytes,6,opt,name=type,proto3" json:"type,omitempty"`
	NumEpisodes          string   `protobuf:"bytes,7,opt,name=num_episodes,json=numEpisodes,proto3" json:"num_episodes,omitempty"`
	Score                string   `protobuf:"bytes,8,opt,name=score,proto3" json:"score,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AnimeSearchResults_AnimeSearchResult) Reset()         { *m = AnimeSearchResults_AnimeSearchResult{} }
func (m *AnimeSearchResults_AnimeSearchResult) String() string { return proto.CompactTextString(m) }
func (*AnimeSearchResults_AnimeSearchResult) ProtoMessage()    {}
func (*AnimeSearchResults_AnimeSearchResult) Descriptor() ([]byte, []int) {
	return fileDescriptor_7365bf8e2ee52b0c, []int{3, 0}
}

func (m *AnimeSearchResults_AnimeSearchResult) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AnimeSearchResults_AnimeSearchResult.Unmarshal(m, b)
}
func (m *AnimeSearchResults_AnimeSearchResult) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AnimeSearchResults_AnimeSearchResult.Marshal(b, m, deterministic)
}
func (m *AnimeSearchResults_AnimeSearchResult) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AnimeSearchResults_AnimeSearchResult.Merge(m, src)
}
func (m *AnimeSearchResults_AnimeSearchResult) XXX_Size() int {
	return xxx_messageInfo_AnimeSearchResults_AnimeSearchResult.Size(m)
}
func (m *AnimeSearchResults_AnimeSearchResult) XXX_DiscardUnknown() {
	xxx_messageInfo_AnimeSearchResults_AnimeSearchResult.DiscardUnknown(m)
}

var xxx_messageInfo_AnimeSearchResults_AnimeSearchResult proto.InternalMessageInfo

func (m *AnimeSearchResults_AnimeSearchResult) GetImgSrc() string {
	if m != nil {
		return m.ImgSrc
	}
	return ""
}

func (m *AnimeSearchResults_AnimeSearchResult) GetImgBlob() []byte {
	if m != nil {
		return m.ImgBlob
	}
	return nil
}

func (m *AnimeSearchResults_AnimeSearchResult) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *AnimeSearchResults_AnimeSearchResult) GetLink() string {
	if m != nil {
		return m.Link
	}
	return ""
}

func (m *AnimeSearchResults_AnimeSearchResult) GetSynopsis() string {
	if m != nil {
		return m.Synopsis
	}
	return ""
}

func (m *AnimeSearchResults_AnimeSearchResult) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *AnimeSearchResults_AnimeSearchResult) GetNumEpisodes() string {
	if m != nil {
		return m.NumEpisodes
	}
	return ""
}

func (m *AnimeSearchResults_AnimeSearchResult) GetScore() string {
	if m != nil {
		return m.Score
	}
	return ""
}

func init() {
	proto.RegisterType((*Username)(nil), "message.Username")
	proto.RegisterType((*UserAnimeList)(nil), "message.UserAnimeList")
	proto.RegisterType((*UserAnimeList_UserAnime)(nil), "message.UserAnimeList.UserAnime")
	proto.RegisterType((*UserAnimeList_UserAnime_AnimeSeason)(nil), "message.UserAnimeList.UserAnime.AnimeSeason")
	proto.RegisterType((*SearchQuery)(nil), "message.SearchQuery")
	proto.RegisterType((*AnimeSearchResults)(nil), "message.AnimeSearchResults")
	proto.RegisterType((*AnimeSearchResults_AnimeSearchResult)(nil), "message.AnimeSearchResults.AnimeSearchResult")
}

func init() { proto.RegisterFile("myanimelist.proto", fileDescriptor_7365bf8e2ee52b0c) }

var fileDescriptor_7365bf8e2ee52b0c = []byte{
	// 892 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x55, 0x6f, 0x8f, 0x1b, 0xb5,
	0x13, 0x56, 0xae, 0xbd, 0x4b, 0x32, 0x49, 0x2e, 0x89, 0x7b, 0xed, 0xb9, 0xe9, 0x4f, 0x6a, 0x7e,
	0x57, 0xc1, 0x45, 0xd5, 0x91, 0x40, 0x11, 0x42, 0xbc, 0x42, 0x57, 0x51, 0xa1, 0x13, 0xff, 0xca,
	0xe6, 0x0a, 0x12, 0x6f, 0x2c, 0x67, 0xd7, 0xec, 0x5a, 0xec, 0xae, 0x17, 0xdb, 0xdb, 0x6a, 0xbf,
	0x16, 0x2f, 0x79, 0xcb, 0xb7, 0xe0, 0xd3, 0x20, 0x8f, 0xbd, 0x4b, 0x8e, 0x48, 0xf0, 0x26, 0x9a,
	0x99, 0xe7, 0x99, 0x19, 0xcf, 0x78, 0xfd, 0x04, 0xe6, 0x45, 0xc3, 0x4b, 0x59, 0x88, 0x5c, 0x1a,
	0xbb, 0xae, 0xb4, 0xb2, 0x8a, 0xf4, 0x0b, 0x61, 0x0c, 0x4f, 0xc5, 0xc5, 0xfb, 0x30, 0x78, 0x63,
	0x84, 0x2e, 0x79, 0x21, 0xc8, 0x02, 0x06, 0x75, 0xb0, 0x69, 0x6f, 0xd9, 0x5b, 0x0d, 0xa3, 0xce,
	0xbf, 0xf8, 0x0d, 0x60, 0xe2, 0x88, 0xd7, 0xae, 0xd0, 0xd7, 0xd2, 0xd8, 0x7f, 0x63, 0x93, 0xcf,
	0x01, 0x9c, 0xcd, 0xb0, 0x2d, 0x3d, 0x5a, 0xde, 0x5b, 0x8d, 0x5e, 0x2c, 0xd7, 0xa1, 0xe7, 0xfa,
	0x4e, 0x9d, 0xbf, 0xbd, 0x68, 0x58, 0xb7, 0xe6, 0xe2, 0x8f, 0x21, 0x0c, 0x3b, 0x80, 0x3c, 0x82,
	0x13, 0x63, 0xb9, 0xad, 0x0d, 0x36, 0x3a, 0x8e, 0x82, 0x47, 0xce, 0xe0, 0xd8, 0xc4, 0x4a, 0xbb,
	0x0e, 0x2e, 0xec, 0x1d, 0x42, 0xe0, 0xbe, 0xe5, 0xa9, 0xa1, 0xf7, 0xf0, 0x50, 0x68, 0x93, 0x67,
	0x30, 0x91, 0x86, 0x69, 0xf1, 0x8e, 0xdb, 0x38, 0x93, 0x65, 0x4a, 0xef, 0x23, 0x38, 0x96, 0x26,
	0xea, 0x62, 0xe4, 0x43, 0x38, 0x2b, 0xeb, 0x82, 0xa1, 0x2f, 0x12, 0x26, 0x2a, 0x69, 0x54, 0x22,
	0x0c, 0x3d, 0xc6, 0xea, 0xa4, 0xac, 0x8b, 0x1f, 0x3d, 0xf4, 0x2a, 0x20, 0xe4, 0x29, 0x8c, 0x70,
	0x44, 0x66, 0xa5, 0xcd, 0x05, 0x3d, 0xc1, 0xa2, 0x80, 0xa1, 0x5b, 0x17, 0x21, 0x57, 0x40, 0x3c,
	0xc1, 0x15, 0xee, 0x0a, 0xf6, 0xb1, 0xe0, 0x0c, 0x91, 0x6f, 0xeb, 0xa2, 0x2b, 0xb7, 0x86, 0x07,
	0x9e, 0xcd, 0xa5, 0x96, 0x65, 0xca, 0xc2, 0xd0, 0x03, 0xa4, 0xcf, 0x11, 0xba, 0x46, 0x64, 0xeb,
	0xe7, 0x7f, 0x0c, 0x03, 0xcf, 0x97, 0x09, 0x1d, 0x22, 0xa9, 0x8f, 0xfe, 0x4d, 0xe2, 0x06, 0xf6,
	0x90, 0xb1, 0x75, 0x22, 0x95, 0xa1, 0xe0, 0x07, 0xc6, 0xe0, 0xd6, 0xc7, 0xc8, 0x25, 0x4c, 0x3d,
	0x29, 0x97, 0xb1, 0x28, 0x8d, 0xd2, 0x86, 0x8e, 0x90, 0x76, 0xca, 0xfd, 0xf5, 0x84, 0x28, 0xf9,
	0x0e, 0xc6, 0xa1, 0x9a, 0xe0, 0x46, 0x95, 0x74, 0xbc, 0xec, 0xad, 0x46, 0x2f, 0xae, 0xfe, 0xeb,
	0x46, 0xd7, 0xf8, 0xbb, 0xc5, 0x9c, 0xc8, 0x6f, 0xca, 0x3b, 0xe4, 0x39, 0xcc, 0x33, 0x6e, 0xda,
	0x8d, 0xb0, 0xb7, 0x32, 0x11, 0x8a, 0x4e, 0x96, 0xbd, 0xd5, 0x20, 0x9a, 0x66, 0xdc, 0x84, 0x8d,
	0xfc, 0xe0, 0xc2, 0x6e, 0x2b, 0x8e, 0x5b, 0x69, 0x55, 0x28, 0x2b, 0x55, 0x19, 0xd8, 0xa7, 0xc8,
	0x76, 0x65, 0x5e, 0xb7, 0x88, 0xe7, 0x3f, 0x81, 0xa1, 0xe3, 0x7b, 0xd6, 0x14, 0x59, 0x83, 0x8c,
	0x9b, 0x0e, 0x44, 0x80, 0xd5, 0x3a, 0xa7, 0x33, 0xff, 0xd9, 0x62, 0xe0, 0x8d, 0xce, 0x1d, 0xe8,
	0xc7, 0x74, 0xe0, 0xdc, 0x83, 0x18, 0x70, 0xe0, 0x0a, 0x66, 0x61, 0xd9, 0x05, 0x4f, 0x05, 0xab,
	0xb8, 0xcd, 0x28, 0xd9, 0xdb, 0xd6, 0x8d, 0x0b, 0xbf, 0xe6, 0x36, 0x23, 0x97, 0x30, 0x93, 0x86,
	0xf1, 0x24, 0x11, 0x09, 0xb3, 0x8a, 0xb9, 0x67, 0x47, 0x1f, 0xe0, 0x39, 0x26, 0xd2, 0x5c, 0xbb,
	0xf0, 0xad, 0xc2, 0x27, 0xf4, 0x09, 0x9c, 0xfb, 0x92, 0x85, 0x48, 0x24, 0x67, 0xb6, 0xa9, 0xdc,
	0x7d, 0xb9, 0x0b, 0xa6, 0x67, 0x58, 0xf9, 0x0c, 0xe1, 0x6f, 0x1c, 0x7a, 0xdb, 0x54, 0x62, 0x8b,
	0x18, 0xf9, 0x14, 0x68, 0x48, 0xab, 0x38, 0x67, 0x9a, 0x5b, 0xff, 0xad, 0x60, 0xde, 0x43, 0xcc,
	0x7b, 0xe8, 0xf3, 0x2a, 0xce, 0x23, 0x44, 0x43, 0xe2, 0x73, 0x98, 0x1b, 0xcb, 0xb5, 0x65, 0x09,
	0xb7, 0x5d, 0xa7, 0x47, 0x98, 0x31, 0x45, 0xe0, 0x0b, 0x6e, 0xdb, 0x26, 0x57, 0x40, 0x7e, 0x96,
	0xa5, 0x34, 0xd9, 0x1d, 0xf2, 0x39, 0x92, 0x67, 0x1e, 0xd9, 0x63, 0x77, 0x93, 0x1c, 0xd6, 0xa7,
	0x7b, 0x93, 0x6c, 0xff, 0xd1, 0xe4, 0x23, 0xf0, 0x27, 0x65, 0xa2, 0x4c, 0xee, 0x24, 0x3d, 0xc6,
	0x24, 0xff, 0x76, 0x5e, 0x95, 0xc9, 0x5e, 0xca, 0x53, 0x18, 0x25, 0xbc, 0x31, 0x2d, 0x71, 0x81,
	0x9f, 0x3d, 0xb8, 0x50, 0x20, 0xbc, 0x07, 0xa7, 0xc6, 0x2a, 0xed, 0xee, 0x28, 0x70, 0x9e, 0x60,
	0xb1, 0x49, 0x88, 0x06, 0xda, 0x25, 0x4c, 0x2b, 0x2d, 0x95, 0x96, 0xb6, 0x69, 0x79, 0xff, 0xf3,
	0xb7, 0xd9, 0x86, 0x3d, 0x71, 0xf1, 0x19, 0x8c, 0xf6, 0x3e, 0x63, 0xa7, 0x2e, 0x8d, 0xe0, 0x3a,
	0x28, 0x11, 0xda, 0xa8, 0x4f, 0xfe, 0x61, 0x1c, 0x61, 0x89, 0xe0, 0x5d, 0x3c, 0x83, 0xd1, 0x56,
	0x70, 0x1d, 0x67, 0xdf, 0xd7, 0x42, 0x37, 0x4e, 0xae, 0x7e, 0x75, 0x46, 0x90, 0x4b, 0xef, 0x5c,
	0xfc, 0x7e, 0x04, 0xa4, 0x6d, 0xa0, 0xe3, 0x2c, 0x12, 0xa6, 0xce, 0xad, 0x21, 0x5f, 0x42, 0x5f,
	0x7b, 0x93, 0xf6, 0x50, 0x3f, 0x3f, 0xe8, 0x5e, 0xdb, 0x21, 0xfb, 0x30, 0x14, 0xb5, 0xd9, 0x8b,
	0x3f, 0x7b, 0x30, 0x3f, 0x80, 0xc9, 0x39, 0xf4, 0x65, 0x91, 0x32, 0xa3, 0xe3, 0x70, 0x9a, 0x13,
	0x59, 0xa4, 0x5b, 0x1d, 0x3b, 0x4d, 0x71, 0xc0, 0x2e, 0x57, 0x3b, 0x9c, 0x66, 0x1c, 0x39, 0xe2,
	0xcb, 0x5c, 0xed, 0xdc, 0xf9, 0xbd, 0xce, 0x79, 0x65, 0xf5, 0x8e, 0x5b, 0x48, 0x2e, 0xcb, 0x5f,
	0x82, 0xa2, 0xa2, 0xed, 0xfe, 0x1b, 0x4c, 0x53, 0xaa, 0xca, 0x48, 0xaf, 0x9e, 0xc3, 0xa8, 0xf3,
	0x51, 0x9e, 0x9b, 0xaa, 0x15, 0x4b, 0xb4, 0xc9, 0xff, 0x61, 0x7c, 0x20, 0x90, 0xc3, 0x68, 0x54,
	0xee, 0x69, 0x63, 0xa7, 0xf5, 0x03, 0xdf, 0x1c, 0x9d, 0x97, 0x5f, 0xfd, 0x74, 0x93, 0x4a, 0x9b,
	0xd5, 0xbb, 0x75, 0xac, 0x8a, 0x4d, 0xaa, 0x85, 0x28, 0x0b, 0x15, 0x67, 0x72, 0x53, 0xe7, 0x56,
	0x16, 0xdc, 0x8a, 0x8d, 0x11, 0xfa, 0xad, 0x8c, 0x85, 0xd9, 0xa4, 0xdc, 0x8a, 0x77, 0xbc, 0xd9,
	0xe0, 0x1f, 0xe0, 0x66, 0xef, 0x2f, 0x71, 0x13, 0xf6, 0xba, 0x3b, 0x41, 0xe8, 0xe3, 0xbf, 0x02,
	0x00, 0x00, 0xff, 0xff, 0x7a, 0x68, 0xac, 0x9b, 0x30, 0x07, 0x00, 0x00,
}
