// Code generated by protoc-gen-go. DO NOT EDIT.
// source: youtubedl.proto

package youtubedl

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type PingRequest struct {
	Message              string   `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PingRequest) Reset()         { *m = PingRequest{} }
func (m *PingRequest) String() string { return proto.CompactTextString(m) }
func (*PingRequest) ProtoMessage()    {}
func (*PingRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_d464b8998ac35df6, []int{0}
}

func (m *PingRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PingRequest.Unmarshal(m, b)
}
func (m *PingRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PingRequest.Marshal(b, m, deterministic)
}
func (m *PingRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PingRequest.Merge(m, src)
}
func (m *PingRequest) XXX_Size() int {
	return xxx_messageInfo_PingRequest.Size(m)
}
func (m *PingRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PingRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PingRequest proto.InternalMessageInfo

func (m *PingRequest) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type PingReply struct {
	Message              string   `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PingReply) Reset()         { *m = PingReply{} }
func (m *PingReply) String() string { return proto.CompactTextString(m) }
func (*PingReply) ProtoMessage()    {}
func (*PingReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_d464b8998ac35df6, []int{1}
}

func (m *PingReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PingReply.Unmarshal(m, b)
}
func (m *PingReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PingReply.Marshal(b, m, deterministic)
}
func (m *PingReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PingReply.Merge(m, src)
}
func (m *PingReply) XXX_Size() int {
	return xxx_messageInfo_PingReply.Size(m)
}
func (m *PingReply) XXX_DiscardUnknown() {
	xxx_messageInfo_PingReply.DiscardUnknown(m)
}

var xxx_messageInfo_PingReply proto.InternalMessageInfo

func (m *PingReply) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type DownloadItem struct {
	Url                  string   `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DownloadItem) Reset()         { *m = DownloadItem{} }
func (m *DownloadItem) String() string { return proto.CompactTextString(m) }
func (*DownloadItem) ProtoMessage()    {}
func (*DownloadItem) Descriptor() ([]byte, []int) {
	return fileDescriptor_d464b8998ac35df6, []int{2}
}

func (m *DownloadItem) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DownloadItem.Unmarshal(m, b)
}
func (m *DownloadItem) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DownloadItem.Marshal(b, m, deterministic)
}
func (m *DownloadItem) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DownloadItem.Merge(m, src)
}
func (m *DownloadItem) XXX_Size() int {
	return xxx_messageInfo_DownloadItem.Size(m)
}
func (m *DownloadItem) XXX_DiscardUnknown() {
	xxx_messageInfo_DownloadItem.DiscardUnknown(m)
}

var xxx_messageInfo_DownloadItem proto.InternalMessageInfo

func (m *DownloadItem) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

type DownloadItemResponse struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DownloadItemResponse) Reset()         { *m = DownloadItemResponse{} }
func (m *DownloadItemResponse) String() string { return proto.CompactTextString(m) }
func (*DownloadItemResponse) ProtoMessage()    {}
func (*DownloadItemResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_d464b8998ac35df6, []int{3}
}

func (m *DownloadItemResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DownloadItemResponse.Unmarshal(m, b)
}
func (m *DownloadItemResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DownloadItemResponse.Marshal(b, m, deterministic)
}
func (m *DownloadItemResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DownloadItemResponse.Merge(m, src)
}
func (m *DownloadItemResponse) XXX_Size() int {
	return xxx_messageInfo_DownloadItemResponse.Size(m)
}
func (m *DownloadItemResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DownloadItemResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DownloadItemResponse proto.InternalMessageInfo

func (m *DownloadItemResponse) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type DownloadID struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DownloadID) Reset()         { *m = DownloadID{} }
func (m *DownloadID) String() string { return proto.CompactTextString(m) }
func (*DownloadID) ProtoMessage()    {}
func (*DownloadID) Descriptor() ([]byte, []int) {
	return fileDescriptor_d464b8998ac35df6, []int{4}
}

func (m *DownloadID) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DownloadID.Unmarshal(m, b)
}
func (m *DownloadID) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DownloadID.Marshal(b, m, deterministic)
}
func (m *DownloadID) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DownloadID.Merge(m, src)
}
func (m *DownloadID) XXX_Size() int {
	return xxx_messageInfo_DownloadID.Size(m)
}
func (m *DownloadID) XXX_DiscardUnknown() {
	xxx_messageInfo_DownloadID.DiscardUnknown(m)
}

var xxx_messageInfo_DownloadID proto.InternalMessageInfo

func (m *DownloadID) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type DownloadRemoveResponse struct {
	Message              string   `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DownloadRemoveResponse) Reset()         { *m = DownloadRemoveResponse{} }
func (m *DownloadRemoveResponse) String() string { return proto.CompactTextString(m) }
func (*DownloadRemoveResponse) ProtoMessage()    {}
func (*DownloadRemoveResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_d464b8998ac35df6, []int{5}
}

func (m *DownloadRemoveResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DownloadRemoveResponse.Unmarshal(m, b)
}
func (m *DownloadRemoveResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DownloadRemoveResponse.Marshal(b, m, deterministic)
}
func (m *DownloadRemoveResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DownloadRemoveResponse.Merge(m, src)
}
func (m *DownloadRemoveResponse) XXX_Size() int {
	return xxx_messageInfo_DownloadRemoveResponse.Size(m)
}
func (m *DownloadRemoveResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DownloadRemoveResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DownloadRemoveResponse proto.InternalMessageInfo

func (m *DownloadRemoveResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type AllDownloadsRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AllDownloadsRequest) Reset()         { *m = AllDownloadsRequest{} }
func (m *AllDownloadsRequest) String() string { return proto.CompactTextString(m) }
func (*AllDownloadsRequest) ProtoMessage()    {}
func (*AllDownloadsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_d464b8998ac35df6, []int{6}
}

func (m *AllDownloadsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AllDownloadsRequest.Unmarshal(m, b)
}
func (m *AllDownloadsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AllDownloadsRequest.Marshal(b, m, deterministic)
}
func (m *AllDownloadsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AllDownloadsRequest.Merge(m, src)
}
func (m *AllDownloadsRequest) XXX_Size() int {
	return xxx_messageInfo_AllDownloadsRequest.Size(m)
}
func (m *AllDownloadsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AllDownloadsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AllDownloadsRequest proto.InternalMessageInfo

type AllDownloads struct {
	Downloads            []*Download `protobuf:"bytes,1,rep,name=downloads,proto3" json:"downloads,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *AllDownloads) Reset()         { *m = AllDownloads{} }
func (m *AllDownloads) String() string { return proto.CompactTextString(m) }
func (*AllDownloads) ProtoMessage()    {}
func (*AllDownloads) Descriptor() ([]byte, []int) {
	return fileDescriptor_d464b8998ac35df6, []int{7}
}

func (m *AllDownloads) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AllDownloads.Unmarshal(m, b)
}
func (m *AllDownloads) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AllDownloads.Marshal(b, m, deterministic)
}
func (m *AllDownloads) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AllDownloads.Merge(m, src)
}
func (m *AllDownloads) XXX_Size() int {
	return xxx_messageInfo_AllDownloads.Size(m)
}
func (m *AllDownloads) XXX_DiscardUnknown() {
	xxx_messageInfo_AllDownloads.DiscardUnknown(m)
}

var xxx_messageInfo_AllDownloads proto.InternalMessageInfo

func (m *AllDownloads) GetDownloads() []*Download {
	if m != nil {
		return m.Downloads
	}
	return nil
}

type Download struct {
	Url                  string                  `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
	Title                string                  `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	State                *Download_DownloadState `protobuf:"bytes,3,opt,name=state,proto3" json:"state,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *Download) Reset()         { *m = Download{} }
func (m *Download) String() string { return proto.CompactTextString(m) }
func (*Download) ProtoMessage()    {}
func (*Download) Descriptor() ([]byte, []int) {
	return fileDescriptor_d464b8998ac35df6, []int{8}
}

func (m *Download) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Download.Unmarshal(m, b)
}
func (m *Download) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Download.Marshal(b, m, deterministic)
}
func (m *Download) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Download.Merge(m, src)
}
func (m *Download) XXX_Size() int {
	return xxx_messageInfo_Download.Size(m)
}
func (m *Download) XXX_DiscardUnknown() {
	xxx_messageInfo_Download.DiscardUnknown(m)
}

var xxx_messageInfo_Download proto.InternalMessageInfo

func (m *Download) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

func (m *Download) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *Download) GetState() *Download_DownloadState {
	if m != nil {
		return m.State
	}
	return nil
}

type Download_DownloadState struct {
	Status               string   `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	Filename             string   `protobuf:"bytes,2,opt,name=filename,proto3" json:"filename,omitempty"`
	EtaStr               string   `protobuf:"bytes,3,opt,name=eta_str,json=etaStr,proto3" json:"eta_str,omitempty"`
	PercentStr           string   `protobuf:"bytes,4,opt,name=percent_str,json=percentStr,proto3" json:"percent_str,omitempty"`
	SpeedStr             string   `protobuf:"bytes,5,opt,name=speed_str,json=speedStr,proto3" json:"speed_str,omitempty"`
	TotalBytesStr        string   `protobuf:"bytes,6,opt,name=total_bytes_str,json=totalBytesStr,proto3" json:"total_bytes_str,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Download_DownloadState) Reset()         { *m = Download_DownloadState{} }
func (m *Download_DownloadState) String() string { return proto.CompactTextString(m) }
func (*Download_DownloadState) ProtoMessage()    {}
func (*Download_DownloadState) Descriptor() ([]byte, []int) {
	return fileDescriptor_d464b8998ac35df6, []int{8, 0}
}

func (m *Download_DownloadState) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Download_DownloadState.Unmarshal(m, b)
}
func (m *Download_DownloadState) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Download_DownloadState.Marshal(b, m, deterministic)
}
func (m *Download_DownloadState) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Download_DownloadState.Merge(m, src)
}
func (m *Download_DownloadState) XXX_Size() int {
	return xxx_messageInfo_Download_DownloadState.Size(m)
}
func (m *Download_DownloadState) XXX_DiscardUnknown() {
	xxx_messageInfo_Download_DownloadState.DiscardUnknown(m)
}

var xxx_messageInfo_Download_DownloadState proto.InternalMessageInfo

func (m *Download_DownloadState) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *Download_DownloadState) GetFilename() string {
	if m != nil {
		return m.Filename
	}
	return ""
}

func (m *Download_DownloadState) GetEtaStr() string {
	if m != nil {
		return m.EtaStr
	}
	return ""
}

func (m *Download_DownloadState) GetPercentStr() string {
	if m != nil {
		return m.PercentStr
	}
	return ""
}

func (m *Download_DownloadState) GetSpeedStr() string {
	if m != nil {
		return m.SpeedStr
	}
	return ""
}

func (m *Download_DownloadState) GetTotalBytesStr() string {
	if m != nil {
		return m.TotalBytesStr
	}
	return ""
}

func init() {
	proto.RegisterType((*PingRequest)(nil), "youtubedl.PingRequest")
	proto.RegisterType((*PingReply)(nil), "youtubedl.PingReply")
	proto.RegisterType((*DownloadItem)(nil), "youtubedl.DownloadItem")
	proto.RegisterType((*DownloadItemResponse)(nil), "youtubedl.DownloadItemResponse")
	proto.RegisterType((*DownloadID)(nil), "youtubedl.DownloadID")
	proto.RegisterType((*DownloadRemoveResponse)(nil), "youtubedl.DownloadRemoveResponse")
	proto.RegisterType((*AllDownloadsRequest)(nil), "youtubedl.AllDownloadsRequest")
	proto.RegisterType((*AllDownloads)(nil), "youtubedl.AllDownloads")
	proto.RegisterType((*Download)(nil), "youtubedl.Download")
	proto.RegisterType((*Download_DownloadState)(nil), "youtubedl.Download.DownloadState")
}

func init() { proto.RegisterFile("youtubedl.proto", fileDescriptor_d464b8998ac35df6) }

var fileDescriptor_d464b8998ac35df6 = []byte{
	// 523 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x54, 0xcb, 0x6e, 0xd3, 0x40,
	0x14, 0x95, 0x93, 0x26, 0xad, 0x6f, 0x5a, 0x82, 0xa6, 0x79, 0xc9, 0x54, 0x24, 0x8c, 0xd4, 0x12,
	0x75, 0xd1, 0x88, 0xb0, 0x40, 0xea, 0x2e, 0x28, 0x02, 0x21, 0xb1, 0x28, 0x0e, 0x1b, 0x56, 0x95,
	0x83, 0x2f, 0xc1, 0xd2, 0xd8, 0xe3, 0x7a, 0xae, 0x41, 0xd9, 0xf2, 0x0b, 0xfc, 0x07, 0xe2, 0x1b,
	0xf8, 0x05, 0x7e, 0x81, 0x0f, 0x41, 0x1e, 0x3f, 0xe2, 0x34, 0x4e, 0x77, 0x73, 0xcf, 0x39, 0x39,
	0x67, 0xe6, 0xe6, 0xc8, 0xd0, 0x5e, 0xcb, 0x98, 0xe2, 0x25, 0xba, 0xe2, 0x2a, 0x8c, 0x24, 0x49,
	0x66, 0x16, 0x80, 0x75, 0xb6, 0x92, 0x72, 0x25, 0x70, 0xe2, 0x84, 0xde, 0xc4, 0x09, 0x02, 0x49,
	0x0e, 0x79, 0x32, 0x50, 0xa9, 0x90, 0x3f, 0x87, 0xd6, 0x8d, 0x17, 0xac, 0x6c, 0xbc, 0x8b, 0x51,
	0x11, 0x1b, 0xc0, 0xa1, 0x8f, 0x4a, 0x39, 0x2b, 0x1c, 0x18, 0x23, 0x63, 0x6c, 0xda, 0xf9, 0xc8,
	0xcf, 0xc1, 0x4c, 0x85, 0xa1, 0x58, 0x3f, 0x20, 0x1b, 0xc1, 0xf1, 0x5c, 0x7e, 0x0f, 0x84, 0x74,
	0xdc, 0x77, 0x84, 0x3e, 0x7b, 0x0c, 0xf5, 0x38, 0x12, 0x99, 0x2a, 0x39, 0xf2, 0x0b, 0xe8, 0x94,
	0x15, 0x36, 0xaa, 0x50, 0x06, 0x0a, 0xd9, 0x23, 0xa8, 0x79, 0x6e, 0x26, 0xac, 0x79, 0x2e, 0x3f,
	0x03, 0x28, 0x74, 0xf3, 0x1d, 0x76, 0x0a, 0xbd, 0x9c, 0xb5, 0xd1, 0x97, 0xdf, 0xb0, 0xf0, 0xd9,
	0x7f, 0xb7, 0x2e, 0x9c, 0xce, 0x84, 0xc8, 0x7f, 0xa6, 0xb2, 0x37, 0xf3, 0x19, 0x1c, 0x97, 0x61,
	0xf6, 0x02, 0x4c, 0x37, 0x1f, 0x06, 0xc6, 0xa8, 0x3e, 0x6e, 0x4d, 0x4f, 0xaf, 0x36, 0x0b, 0x2e,
	0x62, 0x37, 0x2a, 0xfe, 0xbb, 0x06, 0x47, 0x39, 0xbe, 0xfb, 0x64, 0xd6, 0x81, 0x06, 0x79, 0x24,
	0x70, 0x50, 0xd3, 0x58, 0x3a, 0xb0, 0x57, 0xd0, 0x50, 0xe4, 0x10, 0x0e, 0xea, 0x23, 0x63, 0xdc,
	0x9a, 0x3e, 0xab, 0xc8, 0x28, 0x0e, 0x8b, 0x44, 0x68, 0xa7, 0x7a, 0xeb, 0x8f, 0x01, 0x27, 0x5b,
	0x04, 0xeb, 0x41, 0x33, 0xa1, 0x62, 0x95, 0xa5, 0x66, 0x13, 0xb3, 0xe0, 0xe8, 0x8b, 0x27, 0x30,
	0x70, 0xfc, 0x3c, 0xbb, 0x98, 0x59, 0x1f, 0x0e, 0x91, 0x9c, 0x5b, 0x45, 0x91, 0xbe, 0x80, 0x69,
	0x37, 0x91, 0x9c, 0x05, 0x45, 0x6c, 0x08, 0xad, 0x10, 0xa3, 0xcf, 0x18, 0x90, 0x26, 0x0f, 0x34,
	0x09, 0x19, 0x94, 0x08, 0x9e, 0x80, 0xa9, 0x42, 0x44, 0x57, 0xd3, 0x8d, 0xd4, 0x56, 0x03, 0x09,
	0x79, 0x01, 0x6d, 0x92, 0xe4, 0x88, 0xdb, 0xe5, 0x9a, 0x50, 0x69, 0x49, 0x53, 0x4b, 0x4e, 0x34,
	0xfc, 0x3a, 0x41, 0x17, 0x14, 0x4d, 0x7f, 0xd5, 0xc1, 0xfc, 0x94, 0x3e, 0x78, 0xfe, 0x9e, 0xdd,
	0xc0, 0x41, 0xd2, 0x2e, 0xd6, 0x2b, 0x2d, 0xa1, 0xd4, 0x4b, 0xab, 0xb3, 0x83, 0x87, 0x62, 0xcd,
	0xad, 0x1f, 0x7f, 0xff, 0xfd, 0xac, 0x75, 0x78, 0x7b, 0x52, 0xb0, 0x93, 0xd0, 0x0b, 0x56, 0xd7,
	0xc6, 0x25, 0xfb, 0x0a, 0x30, 0x73, 0xdd, 0x8f, 0xf2, 0x43, 0x8c, 0x31, 0xb2, 0x7e, 0xc5, 0x72,
	0x93, 0xf6, 0x59, 0xc3, 0x3d, 0x44, 0x5e, 0x27, 0x3e, 0xd2, 0x19, 0x16, 0xef, 0x96, 0x32, 0x36,
	0xc6, 0x49, 0x52, 0x04, 0xed, 0xb4, 0x82, 0x6f, 0x22, 0xe9, 0xa7, 0x71, 0xdd, 0x2a, 0xd7, 0xb9,
	0x55, 0xf5, 0x17, 0x6f, 0xb7, 0x97, 0x9f, 0xeb, 0xb8, 0x21, 0xb7, 0x4a, 0x71, 0xf7, 0xdc, 0x93,
	0xcc, 0x3b, 0x68, 0xbf, 0x45, 0xda, 0xaa, 0xed, 0xd3, 0x92, 0x79, 0x45, 0xcd, 0xad, 0xfe, 0x1e,
	0xbe, 0x32, 0xf2, 0x9e, 0xf9, 0xb5, 0x71, 0xb9, 0x6c, 0xea, 0x0f, 0xc6, 0xcb, 0xff, 0x01, 0x00,
	0x00, 0xff, 0xff, 0x22, 0x56, 0xed, 0x73, 0x6c, 0x04, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// YoutubeDLClient is the client API for YoutubeDL service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type YoutubeDLClient interface {
	Ping(ctx context.Context, in *PingRequest, opts ...grpc.CallOption) (*PingReply, error)
	AddToQueue(ctx context.Context, in *DownloadItem, opts ...grpc.CallOption) (*DownloadItemResponse, error)
	RemoveFromQueue(ctx context.Context, in *DownloadID, opts ...grpc.CallOption) (*DownloadRemoveResponse, error)
	GetAllDownloads(ctx context.Context, in *AllDownloadsRequest, opts ...grpc.CallOption) (*AllDownloads, error)
}

type youtubeDLClient struct {
	cc *grpc.ClientConn
}

func NewYoutubeDLClient(cc *grpc.ClientConn) YoutubeDLClient {
	return &youtubeDLClient{cc}
}

func (c *youtubeDLClient) Ping(ctx context.Context, in *PingRequest, opts ...grpc.CallOption) (*PingReply, error) {
	out := new(PingReply)
	err := c.cc.Invoke(ctx, "/youtubedl.YoutubeDL/Ping", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *youtubeDLClient) AddToQueue(ctx context.Context, in *DownloadItem, opts ...grpc.CallOption) (*DownloadItemResponse, error) {
	out := new(DownloadItemResponse)
	err := c.cc.Invoke(ctx, "/youtubedl.YoutubeDL/AddToQueue", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *youtubeDLClient) RemoveFromQueue(ctx context.Context, in *DownloadID, opts ...grpc.CallOption) (*DownloadRemoveResponse, error) {
	out := new(DownloadRemoveResponse)
	err := c.cc.Invoke(ctx, "/youtubedl.YoutubeDL/RemoveFromQueue", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *youtubeDLClient) GetAllDownloads(ctx context.Context, in *AllDownloadsRequest, opts ...grpc.CallOption) (*AllDownloads, error) {
	out := new(AllDownloads)
	err := c.cc.Invoke(ctx, "/youtubedl.YoutubeDL/GetAllDownloads", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// YoutubeDLServer is the server API for YoutubeDL service.
type YoutubeDLServer interface {
	Ping(context.Context, *PingRequest) (*PingReply, error)
	AddToQueue(context.Context, *DownloadItem) (*DownloadItemResponse, error)
	RemoveFromQueue(context.Context, *DownloadID) (*DownloadRemoveResponse, error)
	GetAllDownloads(context.Context, *AllDownloadsRequest) (*AllDownloads, error)
}

// UnimplementedYoutubeDLServer can be embedded to have forward compatible implementations.
type UnimplementedYoutubeDLServer struct {
}

func (*UnimplementedYoutubeDLServer) Ping(ctx context.Context, req *PingRequest) (*PingReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Ping not implemented")
}
func (*UnimplementedYoutubeDLServer) AddToQueue(ctx context.Context, req *DownloadItem) (*DownloadItemResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddToQueue not implemented")
}
func (*UnimplementedYoutubeDLServer) RemoveFromQueue(ctx context.Context, req *DownloadID) (*DownloadRemoveResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RemoveFromQueue not implemented")
}
func (*UnimplementedYoutubeDLServer) GetAllDownloads(ctx context.Context, req *AllDownloadsRequest) (*AllDownloads, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAllDownloads not implemented")
}

func RegisterYoutubeDLServer(s *grpc.Server, srv YoutubeDLServer) {
	s.RegisterService(&_YoutubeDL_serviceDesc, srv)
}

func _YoutubeDL_Ping_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PingRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(YoutubeDLServer).Ping(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/youtubedl.YoutubeDL/Ping",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(YoutubeDLServer).Ping(ctx, req.(*PingRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _YoutubeDL_AddToQueue_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DownloadItem)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(YoutubeDLServer).AddToQueue(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/youtubedl.YoutubeDL/AddToQueue",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(YoutubeDLServer).AddToQueue(ctx, req.(*DownloadItem))
	}
	return interceptor(ctx, in, info, handler)
}

func _YoutubeDL_RemoveFromQueue_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DownloadID)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(YoutubeDLServer).RemoveFromQueue(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/youtubedl.YoutubeDL/RemoveFromQueue",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(YoutubeDLServer).RemoveFromQueue(ctx, req.(*DownloadID))
	}
	return interceptor(ctx, in, info, handler)
}

func _YoutubeDL_GetAllDownloads_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AllDownloadsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(YoutubeDLServer).GetAllDownloads(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/youtubedl.YoutubeDL/GetAllDownloads",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(YoutubeDLServer).GetAllDownloads(ctx, req.(*AllDownloadsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _YoutubeDL_serviceDesc = grpc.ServiceDesc{
	ServiceName: "youtubedl.YoutubeDL",
	HandlerType: (*YoutubeDLServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Ping",
			Handler:    _YoutubeDL_Ping_Handler,
		},
		{
			MethodName: "AddToQueue",
			Handler:    _YoutubeDL_AddToQueue_Handler,
		},
		{
			MethodName: "RemoveFromQueue",
			Handler:    _YoutubeDL_RemoveFromQueue_Handler,
		},
		{
			MethodName: "GetAllDownloads",
			Handler:    _YoutubeDL_GetAllDownloads_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "youtubedl.proto",
}
